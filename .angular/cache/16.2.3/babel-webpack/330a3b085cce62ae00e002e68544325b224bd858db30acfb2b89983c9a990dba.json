{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nconst _c0 = function (a0) {\n  return {\n    \"active\": a0\n  };\n};\nfunction PaginationControlsComponent_li_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 2);\n    i0.ɵɵlistener(\"click\", function PaginationControlsComponent_li_5_Template_li_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const page_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onClickPage(page_r1));\n    });\n    i0.ɵɵelementStart(1, \"a\", 3);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const page_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(2, _c0, ctx_r0.activePage === page_r1));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(page_r1);\n  }\n}\nconst _c1 = function (a0) {\n  return {\n    \"disable\": a0\n  };\n};\nexport let PaginationControlsComponent = /*#__PURE__*/(() => {\n  var _class;\n  class PaginationControlsComponent {\n    constructor() {\n      this.totalRecords = 0; // total number of items count which we want to display in pages.\n      this.recordsPerPage = 0; // number of items we want to display in single page.\n      this.onPageChange = new EventEmitter(); // emit the currently active page number to parent component whenever we will click on the page number.\n      this.pages = []; // push pages numbers to the pages array\n      this.activePage = 1;\n    }\n    ngOnInit() {}\n    ngOnChanges(changes) {\n      const pageCount = this.getPageCount();\n      this.pages = this.getArrayOfPage(pageCount);\n      this.activePage = 1;\n      this.onPageChange.emit(1);\n    }\n    // Get the Total Pages numbers\n    getPageCount() {\n      let totalPage = 0;\n      if (this.totalRecords > 0 && this.recordsPerPage > 0) {\n        const pageCount = this.totalRecords / this.recordsPerPage;\n        const roundedPageCount = Math.floor(pageCount);\n        totalPage = roundedPageCount < pageCount ? roundedPageCount + 1 : roundedPageCount;\n      }\n      return totalPage;\n    }\n    getArrayOfPage(pageCount) {\n      const pageArray = [];\n      if (pageCount > 0) {\n        for (let i = 1; i <= pageCount; i++) {\n          pageArray.push(i);\n        }\n      }\n      return pageArray;\n    }\n    // When clicked fires displayActivePage in parent component(TasksMasterComponent)\n    onClickPage(pageNumber) {\n      if (pageNumber >= 1 && pageNumber <= this.pages.length) {\n        this.activePage = pageNumber;\n        this.onPageChange.emit(this.activePage);\n      }\n    }\n  }\n  _class = PaginationControlsComponent;\n  _class.ɵfac = function PaginationControlsComponent_Factory(t) {\n    return new (t || _class)();\n  };\n  _class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _class,\n    selectors: [[\"app-pagination-controls\"]],\n    inputs: {\n      totalRecords: \"totalRecords\",\n      recordsPerPage: \"recordsPerPage\"\n    },\n    outputs: {\n      onPageChange: \"onPageChange\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 9,\n    vars: 7,\n    consts: [[\"aria-label\", \"page navigation example\"], [1, \"pagination\"], [1, \"page-item\", 3, \"ngClass\", \"click\"], [1, \"page-link\"], [\"class\", \"page-item\", 3, \"ngClass\", \"click\", 4, \"ngFor\", \"ngForOf\"]],\n    template: function PaginationControlsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"nav\", 0)(1, \"ul\", 1)(2, \"li\", 2);\n        i0.ɵɵlistener(\"click\", function PaginationControlsComponent_Template_li_click_2_listener() {\n          return ctx.onClickPage(ctx.activePage - 1);\n        });\n        i0.ɵɵelementStart(3, \"a\", 3);\n        i0.ɵɵtext(4, \"Previous\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(5, PaginationControlsComponent_li_5_Template, 3, 4, \"li\", 4);\n        i0.ɵɵelementStart(6, \"li\", 2);\n        i0.ɵɵlistener(\"click\", function PaginationControlsComponent_Template_li_click_6_listener() {\n          return ctx.onClickPage(ctx.activePage + 1);\n        });\n        i0.ɵɵelementStart(7, \"a\", 3);\n        i0.ɵɵtext(8, \"Next\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(3, _c1, ctx.activePage == 1));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.pages);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c1, ctx.activePage == ctx.pages.length));\n      }\n    },\n    dependencies: [i1.NgClass, i1.NgForOf]\n  });\n  return PaginationControlsComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}